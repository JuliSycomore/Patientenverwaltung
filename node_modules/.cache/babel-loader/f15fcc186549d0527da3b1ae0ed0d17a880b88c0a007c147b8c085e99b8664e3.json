{"ast":null,"code":"var _jsxFileName = \"/Users/julianrogowski/Desktop/patientenverwaltung-app/src/components/ICD11ECTBrowser.js\",\n  _s = $RefreshSig$();\n// src/components/ICD11ECTBrowser.js\nimport React, { useEffect, useRef } from 'react';\n\n// Importieren Sie die ECT-Bibliothek und das CSS gemäß der Dokumentation\nimport * as ECT from '@whoicd/icd11ect';\nimport '@whoicd/icd11ect/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ICD11ECTBrowser = () => {\n  _s();\n  // Ein ref, um sicherzustellen, dass die Initialisierung nur einmal ausgeführt wird.\n  const isInitialized = useRef(false);\n  useEffect(() => {\n    // Verhindert eine erneute Ausführung im React Strict Mode (Entwicklungsmodus)\n    if (isInitialized.current) {\n      return;\n    }\n    isInitialized.current = true;\n\n    // Definition der Einstellungen für den Embedded Browser\n    const mySettings = {\n      apiServerUrl: \"https://id.who.int\",\n      // Die offizielle, produktive API-URL\n      apiSecured: true,\n      // Wichtig: Aktiviert die OAUTH-Authentifizierung\n\n      // UI und Sprach-Einstellungen\n      language: \"de\",\n      // Sprache auf Deutsch setzen\n      browserHierarchyAvailable: true,\n      // Zeigt den Baum-Browser links an\n      browserAdvancedSearchAvailable: true,\n      // Aktiviert die erweiterte Suche\n      includeDiagnosticCriteria: true,\n      // Zeigt diagnostische Kriterien an, falls verfügbar\n      hierarchyResizable: true,\n      // Erlaubt das Ändern der Baum-Breite\n      height: \"80vh\" // Setzt eine feste Höhe für das Tool\n    };\n\n    // Definition der Callbacks\n    const myCallbacks = {\n      getNewTokenFunction: async () => {\n        try {\n          const response = await fetch('http://localhost:3001/api/icd11-token');\n          if (!response.ok) {\n            throw new Error('Token-Anfrage fehlgeschlagen: ' + response.status);\n          }\n          const data = await response.json();\n          if (!data.token) {\n            throw new Error('Kein Token in der Antwort');\n          }\n          console.log('Token erhalten:', data.token.substring(0, 10) + '...');\n          return data.token;\n        } catch (e) {\n          console.error(\"Token-Fehler:\", e);\n          return null;\n        }\n      }\n    };\n\n    // KORRIGIERTER AUFRUF: Verwenden Sie ECT.Handler.configure\n    ECT.Handler.configure(mySettings, myCallbacks);\n  }, []); // Der leere Array sorgt dafür, dass dieser Effekt nur einmal ausgeführt wird.\n\n  return (\n    /*#__PURE__*/\n    // Dieser div-Container ist der Ankerpunkt, in den die ECT-Bibliothek\n    // das Nachschlagewerk rendert. Die ID '1' ist eine eindeutige Kennung.\n    _jsxDEV(\"div\", {\n      className: \"ctw-eb-window\",\n      \"data-ctw-ino\": \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(ICD11ECTBrowser, \"iDbkY9aaCDaJx2jtZxYF8cCnJAU=\");\n_c = ICD11ECTBrowser;\nexport default ICD11ECTBrowser;\nvar _c;\n$RefreshReg$(_c, \"ICD11ECTBrowser\");","map":{"version":3,"names":["React","useEffect","useRef","ECT","jsxDEV","_jsxDEV","ICD11ECTBrowser","_s","isInitialized","current","mySettings","apiServerUrl","apiSecured","language","browserHierarchyAvailable","browserAdvancedSearchAvailable","includeDiagnosticCriteria","hierarchyResizable","height","myCallbacks","getNewTokenFunction","response","fetch","ok","Error","status","data","json","token","console","log","substring","e","error","Handler","configure","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/julianrogowski/Desktop/patientenverwaltung-app/src/components/ICD11ECTBrowser.js"],"sourcesContent":["// src/components/ICD11ECTBrowser.js\nimport React, { useEffect, useRef } from 'react';\n\n// Importieren Sie die ECT-Bibliothek und das CSS gemäß der Dokumentation\nimport * as ECT from '@whoicd/icd11ect';\nimport '@whoicd/icd11ect/style.css';\n\nconst ICD11ECTBrowser = () => {\n    // Ein ref, um sicherzustellen, dass die Initialisierung nur einmal ausgeführt wird.\n    const isInitialized = useRef(false);\n\n    useEffect(() => {\n        // Verhindert eine erneute Ausführung im React Strict Mode (Entwicklungsmodus)\n        if (isInitialized.current) {\n            return;\n        }\n        isInitialized.current = true;\n\n        // Definition der Einstellungen für den Embedded Browser\n        const mySettings = {\n            apiServerUrl: \"https://id.who.int\",  // Die offizielle, produktive API-URL\n            apiSecured: true,                   // Wichtig: Aktiviert die OAUTH-Authentifizierung\n            \n            // UI und Sprach-Einstellungen\n            language: \"de\",                     // Sprache auf Deutsch setzen\n            browserHierarchyAvailable: true,    // Zeigt den Baum-Browser links an\n            browserAdvancedSearchAvailable: true, // Aktiviert die erweiterte Suche\n            includeDiagnosticCriteria: true,    // Zeigt diagnostische Kriterien an, falls verfügbar\n            hierarchyResizable: true,           // Erlaubt das Ändern der Baum-Breite\n            height: \"80vh\"                      // Setzt eine feste Höhe für das Tool\n        };\n\n        // Definition der Callbacks\nconst myCallbacks = {\n    getNewTokenFunction: async () => {\n        try {\n            const response = await fetch('http://localhost:3001/api/icd11-token');\n            if (!response.ok) {\n                throw new Error('Token-Anfrage fehlgeschlagen: ' + response.status);\n            }\n            const data = await response.json();\n            if (!data.token) {\n                throw new Error('Kein Token in der Antwort');\n            }\n            console.log('Token erhalten:', data.token.substring(0, 10) + '...');\n            return data.token;\n        } catch (e) {\n            console.error(\"Token-Fehler:\", e);\n            return null;\n        }\n    }\n};\n\n        // KORRIGIERTER AUFRUF: Verwenden Sie ECT.Handler.configure\n        ECT.Handler.configure(mySettings, myCallbacks);\n        \n    }, []); // Der leere Array sorgt dafür, dass dieser Effekt nur einmal ausgeführt wird.\n\n    return (\n        // Dieser div-Container ist der Ankerpunkt, in den die ECT-Bibliothek\n        // das Nachschlagewerk rendert. Die ID '1' ist eine eindeutige Kennung.\n        <div className=\"ctw-eb-window\" data-ctw-ino=\"1\"></div>\n    );\n};\n\nexport default ICD11ECTBrowser;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAEhD;AACA,OAAO,KAAKC,GAAG,MAAM,kBAAkB;AACvC,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAMC,aAAa,GAAGN,MAAM,CAAC,KAAK,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACZ;IACA,IAAIO,aAAa,CAACC,OAAO,EAAE;MACvB;IACJ;IACAD,aAAa,CAACC,OAAO,GAAG,IAAI;;IAE5B;IACA,MAAMC,UAAU,GAAG;MACfC,YAAY,EAAE,oBAAoB;MAAG;MACrCC,UAAU,EAAE,IAAI;MAAoB;;MAEpC;MACAC,QAAQ,EAAE,IAAI;MAAsB;MACpCC,yBAAyB,EAAE,IAAI;MAAK;MACpCC,8BAA8B,EAAE,IAAI;MAAE;MACtCC,yBAAyB,EAAE,IAAI;MAAK;MACpCC,kBAAkB,EAAE,IAAI;MAAY;MACpCC,MAAM,EAAE,MAAM,CAAsB;IACxC,CAAC;;IAED;IACR,MAAMC,WAAW,GAAG;MAChBC,mBAAmB,EAAE,MAAAA,CAAA,KAAY;QAC7B,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;UACrE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAC,gCAAgC,GAAGH,QAAQ,CAACI,MAAM,CAAC;UACvE;UACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClC,IAAI,CAACD,IAAI,CAACE,KAAK,EAAE;YACb,MAAM,IAAIJ,KAAK,CAAC,2BAA2B,CAAC;UAChD;UACAK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,IAAI,CAACE,KAAK,CAACG,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;UACnE,OAAOL,IAAI,CAACE,KAAK;QACrB,CAAC,CAAC,OAAOI,CAAC,EAAE;UACRH,OAAO,CAACI,KAAK,CAAC,eAAe,EAAED,CAAC,CAAC;UACjC,OAAO,IAAI;QACf;MACJ;IACJ,CAAC;;IAEO;IACA7B,GAAG,CAAC+B,OAAO,CAACC,SAAS,CAACzB,UAAU,EAAES,WAAW,CAAC;EAElD,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;IAAA;IACI;IACA;IACAd,OAAA;MAAK+B,SAAS,EAAC,eAAe;MAAC,gBAAa;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;AAE9D,CAAC;AAACjC,EAAA,CAxDID,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AA0DrB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}