{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const XCircle=_ref=>{let{className=\"w-6 h-6\"}=_ref;return/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",className:className,children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"12\",cy:\"12\",r:\"10\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"15\",y1:\"9\",x2:\"9\",y2:\"15\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"9\",y1:\"9\",x2:\"15\",y2:\"15\"})]});};const AddTestTemplateModal=_ref2=>{let{isOpen,onClose,onSave,template,patients,availableTests}=_ref2;const[selectedPatientId,setSelectedPatientId]=useState('');useEffect(()=>{if(isOpen){setSelectedPatientId('');}},[isOpen]);if(!isOpen||!template)return null;const handleSaveTemplate=()=>{if(!selectedPatientId){alert(\"Bitte wählen Sie eine*n Patient*in aus.\");return;}onSave(selectedPatientId,template);onClose();};const testsInTemplate=template.tests.map(testId=>availableTests.find(t=>t.id===testId)).filter(Boolean);// Filter out any tests that might not be found\nconst inputStyle=\"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-teal-500 sm:text-sm\";return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex justify-center items-center z-[99] p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-xl w-full max-w-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-2xl font-semibold text-gray-800\",children:[\"Vorlage zuweisen: \",template.name]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"text-gray-500 hover:text-gray-700\",children:/*#__PURE__*/_jsx(XCircle,{className:\"w-7 h-7\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"patient-select-template\",className:\"block text-sm font-medium text-gray-700\",children:\"Patient*in\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"patient-select-template\",value:selectedPatientId,onChange:e=>setSelectedPatientId(e.target.value),className:inputStyle,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Bitte w\\xE4hlen...\"}),patients.map(p=>/*#__PURE__*/_jsxs(\"option\",{value:p.id,children:[p.name,\", \",p.vorname,\" (\",p.chiffre,\")\"]},p.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-t pt-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-medium text-gray-700\",children:\"Folgende Tests werden hinzugef\\xFCgt:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc list-inside mt-2 text-sm text-gray-600 space-y-1\",children:testsInTemplate.map(test=>/*#__PURE__*/_jsx(\"li\",{children:test.name},test.id))}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-3\",children:\"Hinweis: Diese Tests werden ohne spezifische Ergebnisse als \\\"durchgef\\xFChrt\\\" markiert und k\\xF6nnen sp\\xE4ter manuell zugeordnet werden.\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3 pt-6 mt-4 border-t\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,className:\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\",children:\"Abbrechen\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:handleSaveTemplate,className:\"px-4 py-2 text-sm font-medium text-white bg-teal-600 rounded-md hover:bg-teal-700\",children:\"Vorlage f\\xFCr Patient*in speichern\"})]})]})});};export default AddTestTemplateModal;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","XCircle","_ref","className","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","children","cx","cy","r","x1","y1","x2","y2","AddTestTemplateModal","_ref2","isOpen","onClose","onSave","template","patients","availableTests","selectedPatientId","setSelectedPatientId","handleSaveTemplate","alert","testsInTemplate","tests","map","testId","find","t","id","filter","Boolean","inputStyle","name","onClick","htmlFor","value","onChange","e","target","disabled","p","vorname","chiffre","test","type"],"sources":["/Users/julianrogowski/Documents/Visual Code/patientenverwaltung-app/src/components/AddTestTemplateModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst XCircle = ({ className = \"w-6 h-6\" }) => (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line></svg>);\n\nconst AddTestTemplateModal = ({ isOpen, onClose, onSave, template, patients, availableTests }) => {\n    const [selectedPatientId, setSelectedPatientId] = useState('');\n\n    useEffect(() => {\n        if (isOpen) {\n            setSelectedPatientId('');\n        }\n    }, [isOpen]);\n\n    if (!isOpen || !template) return null;\n\n    const handleSaveTemplate = () => {\n        if (!selectedPatientId) {\n            alert(\"Bitte wählen Sie eine*n Patient*in aus.\");\n            return;\n        }\n        onSave(selectedPatientId, template); \n        onClose();\n    };\n\n    const testsInTemplate = template.tests.map(testId => \n        availableTests.find(t => t.id === testId)\n    ).filter(Boolean); // Filter out any tests that might not be found\n\n    const inputStyle = \"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-teal-500 sm:text-sm\";\n\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex justify-center items-center z-[99] p-4\">\n            <div className=\"bg-white p-6 rounded-lg shadow-xl w-full max-w-lg\">\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h2 className=\"text-2xl font-semibold text-gray-800\">Vorlage zuweisen: {template.name}</h2>\n                    <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n                        <XCircle className=\"w-7 h-7\" />\n                    </button>\n                </div>\n                <div className=\"space-y-4\">\n                    <div>\n                        <label htmlFor=\"patient-select-template\" className=\"block text-sm font-medium text-gray-700\">Patient*in</label>\n                        <select id=\"patient-select-template\" value={selectedPatientId} onChange={(e) => setSelectedPatientId(e.target.value)} className={inputStyle}>\n                            <option value=\"\" disabled>Bitte wählen...</option>\n                            {patients.map(p => (\n                                <option key={p.id} value={p.id}>{p.name}, {p.vorname} ({p.chiffre})</option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <div className=\"border-t pt-4\">\n                        <h4 className=\"text-md font-medium text-gray-700\">Folgende Tests werden hinzugefügt:</h4>\n                        <ul className=\"list-disc list-inside mt-2 text-sm text-gray-600 space-y-1\">\n                            {testsInTemplate.map(test => (\n                                <li key={test.id}>{test.name}</li>\n                            ))}\n                        </ul>\n                         <p className=\"text-xs text-gray-500 mt-3\">Hinweis: Diese Tests werden ohne spezifische Ergebnisse als \"durchgeführt\" markiert und können später manuell zugeordnet werden.</p>\n                    </div>\n                </div>\n                 <div className=\"flex justify-end space-x-3 pt-6 mt-4 border-t\">\n                    <button type=\"button\" onClick={onClose} className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\">Abbrechen</button>\n                    <button type=\"submit\" onClick={handleSaveTemplate} className=\"px-4 py-2 text-sm font-medium text-white bg-teal-600 rounded-md hover:bg-teal-700\">Vorlage für Patient*in speichern</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AddTestTemplateModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}