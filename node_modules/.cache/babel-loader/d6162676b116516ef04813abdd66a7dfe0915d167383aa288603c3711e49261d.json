{"ast":null,"code":"var _jsxFileName = \"/Users/julianrogowski/Desktop/patientenverwaltung-app/src/components/ICD11ECTBrowser.js\",\n  _s = $RefreshSig$();\n// src/components/ICD11ECTBrowser.js\nimport React, { useEffect, useRef } from 'react';\n\n// Importieren Sie die ECT-Bibliothek und das CSS gemäß der Dokumentation\nimport * as ECT from '@whoicd/icd11ect';\nimport '@whoicd/icd11ect/style.css';\n\n// Die Callback-Funktion wird außerhalb der Komponente definiert\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNewToken = async () => {\n  try {\n    const response = await fetch('http://localhost:3001/api/icd11-token');\n    if (!response.ok) {\n      console.error('Fehler beim Abrufen des Tokens vom Backend.');\n      throw new Error('Could not fetch token');\n    }\n    const result = await response.json();\n    return result.token;\n  } catch (e) {\n    console.error(\"Fehler bei der Token-Anfrage:\", e);\n    return null;\n  }\n};\nconst ICD11ECTBrowser = () => {\n  _s();\n  const isInitialized = useRef(false);\n  useEffect(() => {\n    if (isInitialized.current) {\n      return;\n    }\n    isInitialized.current = true;\n\n    // KORREKTUR: Wir steuern die Initialisierung manuell\n    const mySettings = {\n      apiServerUrl: \"https://id.who.int\",\n      apiSecured: true,\n      language: \"de\",\n      // Spezifische Einstellungen für das Coding Tool\n      isMultilingual: true,\n      showKeyboard: true,\n      popupMode: false,\n      // Wichtig: Wir deaktivieren das automatische Binden, um es selbst zu steuern\n      autoBind: false\n    };\n    const myCallbacks = {\n      getNewTokenFunction: getNewToken,\n      // Diese Funktion wird aufgerufen, wenn ein Code ausgewählt wird\n      selectedEntityFunction: selectedEntity => {\n        // Den ausgewählten Code und Text in einem Ausgabefeld anzeigen\n        const selectionDiv = document.getElementById('selection-output');\n        if (selectionDiv) {\n          selectionDiv.innerHTML = `\n                        <p class=\"font-semibold\">Ausgewählte Diagnose:</p>\n                        <p class=\"text-indigo-700 font-mono p-2 bg-indigo-50 rounded-md\">${selectedEntity.code} - ${selectedEntity.selectedText}</p>\n                    `;\n        }\n      }\n    };\n\n    // Schritt 1: Konfigurieren Sie den Handler\n    ECT.Handler.configure(mySettings, myCallbacks);\n\n    // Schritt 2: Binden Sie das Tool manuell nach einer kurzen Verzögerung.\n    // Dies gibt dem DOM Zeit, vollständig bereit zu sein.\n    setTimeout(() => {\n      ECT.Handler.bind(\"1\"); // Die \"1\" entspricht dem data-ctw-ino Attribut\n    }, 100);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-800 mb-2\",\n      children: \"ICD-11 Coding Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-600 mb-4\",\n      children: \"Geben Sie einen Suchbegriff ein, um Diagnosen zu finden und zu kodieren.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"ctw-input\",\n      \"data-ctw-ino\": \"1\",\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"selection-output\",\n      className: \"mt-4 p-4 border rounded-lg bg-gray-50 min-h-[80px]\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"Ihre Auswahl wird hier angezeigt...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(ICD11ECTBrowser, \"iDbkY9aaCDaJx2jtZxYF8cCnJAU=\");\n_c = ICD11ECTBrowser;\nexport default ICD11ECTBrowser;\nvar _c;\n$RefreshReg$(_c, \"ICD11ECTBrowser\");","map":{"version":3,"names":["React","useEffect","useRef","ECT","jsxDEV","_jsxDEV","getNewToken","response","fetch","ok","console","error","Error","result","json","token","e","ICD11ECTBrowser","_s","isInitialized","current","mySettings","apiServerUrl","apiSecured","language","isMultilingual","showKeyboard","popupMode","autoBind","myCallbacks","getNewTokenFunction","selectedEntityFunction","selectedEntity","selectionDiv","document","getElementById","innerHTML","code","selectedText","Handler","configure","setTimeout","bind","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","autoComplete","id","_c","$RefreshReg$"],"sources":["/Users/julianrogowski/Desktop/patientenverwaltung-app/src/components/ICD11ECTBrowser.js"],"sourcesContent":["// src/components/ICD11ECTBrowser.js\nimport React, { useEffect, useRef } from 'react';\n\n// Importieren Sie die ECT-Bibliothek und das CSS gemäß der Dokumentation\nimport * as ECT from '@whoicd/icd11ect';\nimport '@whoicd/icd11ect/style.css';\n\n// Die Callback-Funktion wird außerhalb der Komponente definiert\nconst getNewToken = async () => {\n    try {\n        const response = await fetch('http://localhost:3001/api/icd11-token');\n        if (!response.ok) {\n            console.error('Fehler beim Abrufen des Tokens vom Backend.');\n            throw new Error('Could not fetch token');\n        }\n        const result = await response.json();\n        return result.token; \n    } catch (e) {\n        console.error(\"Fehler bei der Token-Anfrage:\", e);\n        return null;\n    }\n};\n\n\nconst ICD11ECTBrowser = () => {\n    const isInitialized = useRef(false);\n\n    useEffect(() => {\n        if (isInitialized.current) {\n            return;\n        }\n        isInitialized.current = true;\n\n        // KORREKTUR: Wir steuern die Initialisierung manuell\n        const mySettings = {\n            apiServerUrl: \"https://id.who.int\",\n            apiSecured: true,\n            language: \"de\",\n            // Spezifische Einstellungen für das Coding Tool\n            isMultilingual: true,\n            showKeyboard: true,\n            popupMode: false,\n            // Wichtig: Wir deaktivieren das automatische Binden, um es selbst zu steuern\n            autoBind: false\n        };\n\n        const myCallbacks = {\n            getNewTokenFunction: getNewToken,\n            // Diese Funktion wird aufgerufen, wenn ein Code ausgewählt wird\n            selectedEntityFunction: (selectedEntity) => {\n                // Den ausgewählten Code und Text in einem Ausgabefeld anzeigen\n                const selectionDiv = document.getElementById('selection-output');\n                if (selectionDiv) {\n                    selectionDiv.innerHTML = `\n                        <p class=\"font-semibold\">Ausgewählte Diagnose:</p>\n                        <p class=\"text-indigo-700 font-mono p-2 bg-indigo-50 rounded-md\">${selectedEntity.code} - ${selectedEntity.selectedText}</p>\n                    `;\n                }\n            }\n        };\n        \n        // Schritt 1: Konfigurieren Sie den Handler\n        ECT.Handler.configure(mySettings, myCallbacks);\n        \n        // Schritt 2: Binden Sie das Tool manuell nach einer kurzen Verzögerung.\n        // Dies gibt dem DOM Zeit, vollständig bereit zu sein.\n        setTimeout(() => {\n            ECT.Handler.bind(\"1\"); // Die \"1\" entspricht dem data-ctw-ino Attribut\n        }, 100);\n        \n    }, []); \n\n    return (\n        <div className=\"p-4 bg-white rounded-lg shadow-lg\">\n            <h2 className=\"text-2xl font-semibold text-gray-800 mb-2\">ICD-11 Coding Tool</h2>\n            <p className=\"text-sm text-gray-600 mb-4\">Geben Sie einen Suchbegriff ein, um Diagnosen zu finden und zu kodieren.</p>\n            \n            {/* Das \"Coding Tool\" benötigt ein input-Feld als Anker */}\n            <input \n                type=\"text\" \n                className=\"ctw-input\" \n                data-ctw-ino=\"1\"\n                autoComplete=\"off\"\n            />\n            \n            {/* Ein div, um die Auswahl anzuzeigen */}\n            <div id=\"selection-output\" className=\"mt-4 p-4 border rounded-lg bg-gray-50 min-h-[80px]\">\n                <p className=\"text-gray-500\">Ihre Auswahl wird hier angezeigt...</p>\n            </div>\n        </div>\n    );\n};\n\nexport default ICD11ECTBrowser;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAEhD;AACA,OAAO,KAAKC,GAAG,MAAM,kBAAkB;AACvC,OAAO,4BAA4B;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;IACrE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACdC,OAAO,CAACC,KAAK,CAAC,6CAA6C,CAAC;MAC5D,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC5C;IACA,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM,CAACE,KAAK;EACvB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRN,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEK,CAAC,CAAC;IACjD,OAAO,IAAI;EACf;AACJ,CAAC;AAGD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,aAAa,GAAGjB,MAAM,CAAC,KAAK,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACZ,IAAIkB,aAAa,CAACC,OAAO,EAAE;MACvB;IACJ;IACAD,aAAa,CAACC,OAAO,GAAG,IAAI;;IAE5B;IACA,MAAMC,UAAU,GAAG;MACfC,YAAY,EAAE,oBAAoB;MAClCC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,IAAI;MACd;MACAC,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,KAAK;MAChB;MACAC,QAAQ,EAAE;IACd,CAAC;IAED,MAAMC,WAAW,GAAG;MAChBC,mBAAmB,EAAExB,WAAW;MAChC;MACAyB,sBAAsB,EAAGC,cAAc,IAAK;QACxC;QACA,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;QAChE,IAAIF,YAAY,EAAE;UACdA,YAAY,CAACG,SAAS,GAAG;AAC7C;AACA,2FAA2FJ,cAAc,CAACK,IAAI,MAAML,cAAc,CAACM,YAAY;AAC/I,qBAAqB;QACL;MACJ;IACJ,CAAC;;IAED;IACAnC,GAAG,CAACoC,OAAO,CAACC,SAAS,CAACnB,UAAU,EAAEQ,WAAW,CAAC;;IAE9C;IACA;IACAY,UAAU,CAAC,MAAM;MACbtC,GAAG,CAACoC,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,GAAG,CAAC;EAEX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIrC,OAAA;IAAKsC,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAC9CvC,OAAA;MAAIsC,SAAS,EAAC,2CAA2C;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjF3C,OAAA;MAAGsC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAwE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGtH3C,OAAA;MACI4C,IAAI,EAAC,MAAM;MACXN,SAAS,EAAC,WAAW;MACrB,gBAAa,GAAG;MAChBO,YAAY,EAAC;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAGF3C,OAAA;MAAK8C,EAAE,EAAC,kBAAkB;MAACR,SAAS,EAAC,oDAAoD;MAAAC,QAAA,eACrFvC,OAAA;QAAGsC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAnEID,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AAqErB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}