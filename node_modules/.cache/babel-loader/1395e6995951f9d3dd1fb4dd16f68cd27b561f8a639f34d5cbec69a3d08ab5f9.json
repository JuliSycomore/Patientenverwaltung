{"ast":null,"code":"var _jsxFileName = \"/Users/julianrogowski/Desktop/patientenverwaltung-app/src/components/BDI2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Eine Komponente für das Formular, die im AddTestFlowModal verwendet wird\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Bdi2EntryForm = ({\n  onSave\n}) => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [useCustomDate, setUseCustomDate] = useState(false);\n  // Heutiges Datum als Standard im 'YYYY-MM-DD' Format\n  const [testDate, setTestDate] = useState(new Date().toISOString().split('T')[0]);\n  const handleSave = () => {\n    if (score < 0 || score > 63) {\n      alert(\"Bitte geben Sie einen gültigen BDI-II Wert zwischen 0 und 63 ein.\");\n      return;\n    }\n\n    // Das ausgewählte Datum wird an die onSave-Funktion übergeben\n    onSave({\n      results: {\n        score: score\n      },\n      // Stellt sicher, dass das Datum im ISO-Format für die DB gespeichert wird\n      date: new Date(testDate).toISOString()\n    });\n  };\n  const inputStyle = \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-teal-500 focus:border-teal-500 sm:text-sm\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bdi-score\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"BDI-II Summenwert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"bdi-score\",\n        value: score,\n        onChange: e => setScore(parseInt(e.target.value, 10) || 0),\n        className: inputStyle,\n        min: \"0\",\n        max: \"63\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 p-3 bg-gray-50 rounded-md border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"custom-date-toggle\",\n          checked: useCustomDate,\n          onChange: e => setUseCustomDate(e.target.checked),\n          className: \"h-4 w-4 text-teal-600 border-gray-300 rounded focus:ring-teal-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"custom-date-toggle\",\n          className: \"ml-2 block text-sm text-gray-900\",\n          children: \"Anderes Testdatum verwenden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), useCustomDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"test-date\",\n          className: \"block text-xs font-medium text-gray-600 mb-1\",\n          children: \"Benutzerdefiniertes Testdatum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"test-date\",\n          value: testDate,\n          onChange: e => setTestDate(e.target.value),\n          className: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end pt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"px-4 py-2 text-sm font-medium text-white bg-teal-600 rounded-md hover:bg-teal-700\",\n        children: \"Testergebnis speichern\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Bdi2EntryForm, \"gBkzGn9RKT/YCc5gxF2XZRwqamk=\");\n_c = Bdi2EntryForm;\nvar _c;\n$RefreshReg$(_c, \"Bdi2EntryForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Bdi2EntryForm","onSave","_s","score","setScore","useCustomDate","setUseCustomDate","testDate","setTestDate","Date","toISOString","split","handleSave","alert","results","date","inputStyle","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","parseInt","target","min","max","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/julianrogowski/Desktop/patientenverwaltung-app/src/components/BDI2.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// Eine Komponente für das Formular, die im AddTestFlowModal verwendet wird\nexport const Bdi2EntryForm = ({ onSave }) => {\n    const [score, setScore] = useState(0);\n    const [useCustomDate, setUseCustomDate] = useState(false);\n    // Heutiges Datum als Standard im 'YYYY-MM-DD' Format\n    const [testDate, setTestDate] = useState(new Date().toISOString().split('T')[0]);\n\n    const handleSave = () => {\n        if (score < 0 || score > 63) {\n            alert(\"Bitte geben Sie einen gültigen BDI-II Wert zwischen 0 und 63 ein.\");\n            return;\n        }\n\n        // Das ausgewählte Datum wird an die onSave-Funktion übergeben\n        onSave({\n            results: { score: score },\n            // Stellt sicher, dass das Datum im ISO-Format für die DB gespeichert wird\n            date: new Date(testDate).toISOString(),\n        });\n    };\n    \n    const inputStyle = \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-teal-500 focus:border-teal-500 sm:text-sm\";\n\n    return (\n        <div className=\"space-y-4\">\n            <div>\n                <label htmlFor=\"bdi-score\" className=\"block text-sm font-medium text-gray-700\">\n                    BDI-II Summenwert\n                </label>\n                <input\n                    type=\"number\"\n                    id=\"bdi-score\"\n                    value={score}\n                    onChange={(e) => setScore(parseInt(e.target.value, 10) || 0)}\n                    className={inputStyle}\n                    min=\"0\"\n                    max=\"63\"\n                />\n            </div>\n            \n            {/* --- HIER STARTET DIE NEUE LOGIK --- */}\n            <div className=\"space-y-2 p-3 bg-gray-50 rounded-md border\">\n                <div className=\"flex items-center\">\n                    <input\n                        type=\"checkbox\"\n                        id=\"custom-date-toggle\"\n                        checked={useCustomDate}\n                        onChange={(e) => setUseCustomDate(e.target.checked)}\n                        className=\"h-4 w-4 text-teal-600 border-gray-300 rounded focus:ring-teal-500\"\n                    />\n                    <label htmlFor=\"custom-date-toggle\" className=\"ml-2 block text-sm text-gray-900\">\n                        Anderes Testdatum verwenden\n                    </label>\n                </div>\n\n                {useCustomDate && (\n                    <div>\n                        <label htmlFor=\"test-date\" className=\"block text-xs font-medium text-gray-600 mb-1\">\n                            Benutzerdefiniertes Testdatum\n                        </label>\n                        <input\n                            type=\"date\"\n                            id=\"test-date\"\n                            value={testDate}\n                            onChange={(e) => setTestDate(e.target.value)}\n                            className={inputStyle}\n                        />\n                    </div>\n                )}\n            </div>\n            {/* --- HIER ENDET DIE NEUE LOGIK --- */}\n\n            <div className=\"flex justify-end pt-4\">\n                <button\n                    onClick={handleSave}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-teal-600 rounded-md hover:bg-teal-700\"\n                >\n                    Testergebnis speichern\n                </button>\n            </div>\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}