{"ast":null,"code":"var _jsxFileName = \"/Users/julianrogowski/Desktop/patientenverwaltung-app/src/components/ICD11ECTBrowser.js\",\n  _s = $RefreshSig$();\n// src/components/ICD11ECTBrowser.js\nimport React, { useEffect, useRef, useState } from 'react';\n\n// Da die Bibliothek jetzt global in index.html geladen wird,\n// greifen wir über das window-Objekt darauf zu.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ECT = window.ECT;\nconst ICD11ECTBrowser = () => {\n  _s();\n  // Ein ref, um sicherzustellen, dass die Initialisierung nur einmal ausgeführt wird.\n  const isInitialized = useRef(false);\n\n  // State, um den aktiven Kapitel-Filter zu speichern\n  const [activeFilter, setActiveFilter] = useState(null);\n  useEffect(() => {\n    // Überprüft, ob die Komponente bereits initialisiert wurde oder ob das ECT-Objekt noch nicht verfügbar ist\n    if (isInitialized.current || !ECT) {\n      return;\n    }\n    isInitialized.current = true;\n\n    // Definition der Grundeinstellungen für den Embedded Browser\n    const mySettings = {\n      apiServerUrl: \"https://id.who.int\",\n      apiSecured: true,\n      language: \"de\",\n      browserHierarchyAvailable: true,\n      browserAdvancedSearchAvailable: true,\n      includeDiagnosticCriteria: true,\n      hierarchyResizable: true,\n      height: \"75vh\"\n    };\n    const myCallbacks = {\n      getNewTokenFunction: async () => {\n        try {\n          const response = await fetch('http://localhost:3001/api/icd11-token');\n          if (!response.ok) {\n            console.error('Fehler beim Abrufen des Tokens vom Backend.');\n            throw new Error('Could not fetch token');\n          }\n          const result = await response.json();\n          return result.token;\n        } catch (e) {\n          console.error(\"Fehler bei der Token-Anfrage:\", e);\n          return null;\n        }\n      }\n    };\n\n    // Konfiguriert und initialisiert den Browser. Da `autoBind` standardmäßig `true` ist,\n    // sucht die Bibliothek nach dem Rendern automatisch nach dem Anker-div.\n    ECT.Handler.configure(mySettings, myCallbacks);\n  }, []);\n\n  // Filter-Handler, der die Konfiguration überschreibt.\n  const handleFilterChange = newFilter => {\n    if (isInitialized.current && ECT) {\n      setActiveFilter(newFilter);\n      ECT.Handler.overwriteConfiguration(\"1\", {\n        // \"1\" ist die ID unseres Browsers\n        chaptersFilter: newFilter || \"\" // Leerer String setzt den Filter zurück\n      });\n    }\n  };\n  const filterButtons = [{\n    label: \"Alle Kapitel\",\n    filter: null\n  }, {\n    label: \"Psychische Störungen (06)\",\n    filter: \"06\"\n  }, {\n    label: \"Neurolog. Störungen (08)\",\n    filter: \"08\"\n  }, {\n    label: \"Schlaf-Wach-Störungen (07)\",\n    filter: \"07\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-800 mb-4\",\n      children: \"ICD-11 Nachschlagewerk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm font-semibold self-center text-gray-600\",\n        children: \"Schnellfilter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), filterButtons.map(({\n        label,\n        filter\n      }) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFilterChange(filter),\n        className: `px-3 py-1 text-sm rounded-full transition-colors ${activeFilter === filter ? 'bg-indigo-600 text-white shadow' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ctw-eb-window\",\n      \"data-ctw-ino\": \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(ICD11ECTBrowser, \"9lU34GIrsC+uDvH6eTfecCT2Egg=\");\n_c = ICD11ECTBrowser;\nexport default ICD11ECTBrowser;\nvar _c;\n$RefreshReg$(_c, \"ICD11ECTBrowser\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ECT","window","ICD11ECTBrowser","_s","isInitialized","activeFilter","setActiveFilter","current","mySettings","apiServerUrl","apiSecured","language","browserHierarchyAvailable","browserAdvancedSearchAvailable","includeDiagnosticCriteria","hierarchyResizable","height","myCallbacks","getNewTokenFunction","response","fetch","ok","console","error","Error","result","json","token","e","Handler","configure","handleFilterChange","newFilter","overwriteConfiguration","chaptersFilter","filterButtons","label","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/julianrogowski/Desktop/patientenverwaltung-app/src/components/ICD11ECTBrowser.js"],"sourcesContent":["// src/components/ICD11ECTBrowser.js\nimport React, { useEffect, useRef, useState } from 'react';\n\n// Da die Bibliothek jetzt global in index.html geladen wird,\n// greifen wir über das window-Objekt darauf zu.\nconst ECT = window.ECT;\n\nconst ICD11ECTBrowser = () => {\n    // Ein ref, um sicherzustellen, dass die Initialisierung nur einmal ausgeführt wird.\n    const isInitialized = useRef(false);\n    \n    // State, um den aktiven Kapitel-Filter zu speichern\n    const [activeFilter, setActiveFilter] = useState(null);\n\n    useEffect(() => {\n        // Überprüft, ob die Komponente bereits initialisiert wurde oder ob das ECT-Objekt noch nicht verfügbar ist\n        if (isInitialized.current || !ECT) {\n            return;\n        }\n        isInitialized.current = true;\n\n        // Definition der Grundeinstellungen für den Embedded Browser\n        const mySettings = {\n            apiServerUrl: \"https://id.who.int\",\n            apiSecured: true,\n            language: \"de\",\n            browserHierarchyAvailable: true,    \n            browserAdvancedSearchAvailable: true, \n            includeDiagnosticCriteria: true,    \n            hierarchyResizable: true,           \n            height: \"75vh\"                      \n        };\n\n        const myCallbacks = {\n            getNewTokenFunction: async () => {\n                try {\n                    const response = await fetch('http://localhost:3001/api/icd11-token');\n                    if (!response.ok) {\n                        console.error('Fehler beim Abrufen des Tokens vom Backend.');\n                        throw new Error('Could not fetch token');\n                    }\n                    const result = await response.json();\n                    return result.token; \n                } catch (e) {\n                    console.error(\"Fehler bei der Token-Anfrage:\", e);\n                    return null;\n                }\n            }\n        };\n        \n        // Konfiguriert und initialisiert den Browser. Da `autoBind` standardmäßig `true` ist,\n        // sucht die Bibliothek nach dem Rendern automatisch nach dem Anker-div.\n        ECT.Handler.configure(mySettings, myCallbacks);\n        \n    }, []); \n\n    // Filter-Handler, der die Konfiguration überschreibt.\n    const handleFilterChange = (newFilter) => {\n        if (isInitialized.current && ECT) {\n            setActiveFilter(newFilter);\n            ECT.Handler.overwriteConfiguration(\"1\", { // \"1\" ist die ID unseres Browsers\n                chaptersFilter: newFilter || \"\" // Leerer String setzt den Filter zurück\n            });\n        }\n    };\n\n    const filterButtons = [\n        { label: \"Alle Kapitel\", filter: null },\n        { label: \"Psychische Störungen (06)\", filter: \"06\" },\n        { label: \"Neurolog. Störungen (08)\", filter: \"08\" },\n        { label: \"Schlaf-Wach-Störungen (07)\", filter: \"07\"},\n    ];\n\n    return (\n        <div className=\"p-4 bg-white rounded-lg shadow-lg\">\n             <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">ICD-11 Nachschlagewerk</h2>\n            <div className=\"flex flex-wrap gap-2 mb-4\">\n                <span className=\"text-sm font-semibold self-center text-gray-600\">Schnellfilter:</span>\n                {filterButtons.map(({label, filter}) => (\n                     <button \n                        key={label}\n                        onClick={() => handleFilterChange(filter)}\n                        className={`px-3 py-1 text-sm rounded-full transition-colors ${\n                            activeFilter === filter \n                            ? 'bg-indigo-600 text-white shadow' \n                            : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                        }`}\n                     >\n                        {label}\n                     </button>\n                ))}\n            </div>\n            \n            {/* Wichtig: Dies ist der Ankerpunkt für den Embedded BROWSER */}\n            <div className=\"ctw-eb-window\" data-ctw-ino=\"1\"></div>\n        </div>\n    );\n};\n\nexport default ICD11ECTBrowser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}